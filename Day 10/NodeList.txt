import java.util.*;

public class ListNode {
    int val;
    ListNode next;

    public ListNode(int val) {
        this.val = val;
    }

    static void printReverseListNode(ListNode current){
        if(current == null){
            return ;
        }

        printReverseListNode(current.next);
        System.out.print(current.val+"->");

    }

    public static void main(String args[]) {
        ListNode node1 = new ListNode(10);
        ListNode node2 = new ListNode(20);
        ListNode node3 = new ListNode(30);
        ListNode node4 = new ListNode(40);
        node1.next = node2;
        node2.next = node3;
        node3.next = node4;

        ListNode current = node1;

        while(current != null){
            System.out.print(current.val + "->");
            current= current.next;
        }

        System.out.println(" ");
        System.out.println("Reversing the listNode value");
        //1. using stack

//   Stack<Integer> stack = new Stack<Integer>();
//   current = node1;

//   while(current != null){
//         stack.push(current.val);
//         current= current.next;
//     }

//     while(!stack.empty()){
//         System.out.print(stack.pop()+"->");
//     }

        // 2. using recursion
        current = node1;
        printReverseListNode(current);


    }

}